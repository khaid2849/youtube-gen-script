# Byte-compiled / optimized / DLL files
__pycache__/
*.py[cod]
*$py.class

# C extensions
*.so

# Distribution / packaging
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
pip-wheel-metadata/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
*.manifest
*.spec

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports
htmlcov/
.tox/
.nox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
*.py,cover
.hypothesis/
.pytest_cache/

# Translations
*.mo
*.pot

# Django stuff:
*.log
local_settings.py
db.sqlite3
db.sqlite3-journal

# Flask stuff:
instance/
.webassets-cache

# Scrapy stuff:
.scrapy

# Sphinx documentation
docs/_build/

# PyBuilder
target/

# Jupyter Notebook
.ipynb_checkpoints

# IPython
profile_default/
ipython_config.py

# pyenv
.python-version

# pipenv
#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
#   However, in case of collaboration, if having platform-specific dependencies or dependencies
#   having no cross-platform support, pipenv may install dependencies that don't work, or not
#   install all needed dependencies.
#Pipfile.lock

# PEP 582; used by e.g. github.com/David-OConnor/pyflow
__pypackages__/

# Celery stuff
celerybeat-schedule
celerybeat.pid
celerybeat-schedule.*
.celery_beat_schedule

# SageMath parsed files
*.sage.py

# Environments
.env
.venv
env/
venv/
ENV/
env.bak/
venv.bak/
backend/venv/

# Spyder project settings
.spyderproject
.spyproject

# Rope project settings
.ropeproject

# mkdocs documentation
/site

# mypy
.mypy_cache/
.dmypy.json
dmypy.json

# Pyre type checker
.pyre/

# Node.js dependencies
node_modules/
npm-debug.log*
yarn-debug.log*
yarn-error.log*

# React build files
frontend/build/
frontend/dist/
build/

# Package files
*.tgz
*.tar.gz

# Runtime data
pids
*.pid
*.seed
*.pid.lock

# Coverage directory used by tools like istanbul
coverage/

# nyc test coverage
.nyc_output

# Grunt intermediate storage
.grunt

# Bower dependency directory
bower_components

# node-waf configuration
.lock-wscript

# Compiled binary addons
build/Release

# Dependency directories
jspm_packages/

# TypeScript v1 declaration files
typings/

# TypeScript cache
*.tsbuildinfo

# Optional npm cache directory
.npm

# Optional eslint cache
.eslintcache

# Optional REPL history
.node_repl_history

# Yarn Integrity file
.yarn-integrity

# dotenv environment variables file
.env.local
.env.development.local
.env.test.local
.env.production.local

# parcel-bundler cache
.cache
.parcel-cache

# Next.js build output
.next

# Nuxt.js build / generate output
.nuxt

# Storybook build outputs
.out
.storybook-out

# Logs
logs
*.log
npm-debug.log*
yarn-debug.log*
yarn-error.log*
lerna-debug.log*

# OS generated files
.DS_Store
.DS_Store?
._*
.Spotlight-V100
.Trashes
ehthumbs.db
Thumbs.db

# IDE files
.vscode/
.idea/
*.swp
*.swo
*~
*.sublime-*

# Database files
*.sqlite
*.sqlite3
*.db

# Project-specific: Audio/Video files (temporary processing files)
*.mp3
*.mp4
*.wav
*.m4a
*.webm
*.ogg
*.aac
*.flac

# Project-specific: Generated and temporary files
generated_scripts/
backend/generated_scripts/
temp_audio/
backend/temp_audio/
scripts/
transcripts/
downloads/

# AWS credentials
.aws/

# Docker files
docker-compose.override.yml

# Jupyter Notebook checkpoints
.ipynb_checkpoints/

# AI model files (if storing locally)
*.pt
*.pth
*.onnx
*.pkl
*.joblib
models/
model_cache/

# Redis dump files
dump.rdb
*.rdb

# Backup files
*.bak
*.backup

# Local configuration files
config.local.py
settings.local.py
local_settings.py

# Certificate files
*.pem
*.key
*.crt
*.p12

# Database migration files (optional - uncomment if you want to ignore)
# backend/alembic/versions/*.py

# FastAPI specific
.pytest_cache/
instance/

# YouTube DL cache
.cache/youtube-dl/
.cache/yt-dlp/

# FFmpeg temporary files
ffmpeg_*
*.tmp

# Text processing temporary files
*.txt.tmp
*.json.tmp

# Machine learning model files
*.model
*.bin
*.h5
*.keras

# Large data files
*.csv
*.json
data/
datasets/

# API keys and secrets (additional security)
api_keys.py
secrets.py
.secrets/

# Testing
.coverage.*
test_results/
pytest_cache/

# Monitoring and profiling
.prof
*.prof

# Package lock files for development (uncomment if desired)
# frontend/package-lock.json

# Development database
dev.db
development.db
test.db

# Temporary directories
tmp/
temp/
temporary/

# System files
.directory
desktop.ini